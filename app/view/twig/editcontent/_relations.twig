{% if context.content.relation is not empty or context.contenttype.relations is defined %}

    {# Only if we have NO grouping tabs. #}
    {% if context.contenttype.groups|default is empty %}
        <hr>
    {% endif %}

    <div class="tabgrouping" data-tab="taxonomy">

        <h3>
            {{ __('Relationships') }}
            <span class="label info-pop" data-html="true" data-title="{{ __('Relationships') }}"
                data-content="{{ app.translator.trans('info.relationships', {}, 'infos') }}">{{ __('Info') }}</span>
        </h3>

{% endif %}

{# Relationships for this record #}
{% if context.contenttype.relations is defined %}

    <div class="form-group">

        {% for relcontenttype, relation in context.contenttype.relations %}

            {# Prefix #}
            {% if relation.prefix is defined and relation.prefix is not empty %}
                <div class="prefix">
                    {{ relation.prefix|markdown }}
                </div>
            {% endif %}

            {# Relationship #}
            <fieldset>
                {# We set the 'format' for the rendering of each <option>. With fallback to a sensible default. #}
                {% set format = relation.format|default("{{ item.title|escape }} <span>(â„– {{ item.id }})</span>") %}

                {{ macro.label(relation.label, relcontenttype|ucfirst, 'col-sm-4 control-label', 'relation-' ~ relcontenttype) }}
                <div class="col-sm-8">

                    {% if relation.multiple is defined and relation.multiple == 1 %}
                        <select name="relation[{{ relcontenttype }}][]" id="relation-{{ relcontenttype }}" class="wide" multiple style="width: 100%;" data-placeholder="{{ __('(none)') }}">
                    {% else %}
                        <select name="relation[{{ relcontenttype }}][]" id="relation-{{ relcontenttype }}" class="wide" style="width: 100%;" data-placeholder="{{ __('(none)') }}">
                            <option value="0">{{ __('(none)') }}</option>
                    {% endif %}

                        {% set groupby = relation.groupby|default(false) %}
                        {% set optgroup = '' %}
                        {% for item in listcontent(relcontenttype, relation, context.content) %}
                            {% if relcontenttype == app.request.get('relation') and item.id == app.request.get('relationid') %}
                                {% set selectedbyrelation = true %}
                            {% else %}
                                {% set selectedbyrelation = false %}
                            {% endif %}
                            {% if groupby and optgroup != item[groupby] %}
                                {% if optgroup != '' %}</optgroup>{% endif %}
                                {% set optgroup = item[groupby] %}
                                <optgroup label="{{ optgroup }}">
                            {% endif %}
                            <option value="{{ item.id }}"{% if item.selected or selectedbyrelation %} selected{% endif %}>
                                {{ format|twig({'item': item}) }}
                            </option>
                        {% endfor %}
                        {% if optgroup != '' %}</optgroup>{% endif %}

                    </select>

                    <script>
                        $(function() {
                            $('#relation-{{ relcontenttype }}').select2({
                                placeholder: "{{ __('(none)') }}",
                                allowClear: true
                                {% if groupby %}, formatSelection: function (item) {
                                    return $(item.element).parent().attr('label') + ': ' + item.text;
                                }{% endif %}
                            });
                        });
                    </script>

                </div>
            </fieldset>

            {# Postfix #}
            {% if relation.postfix is defined and relation.postfix is not empty %}
                <div class="postfix">
                    {{ relation.postfix|markdown }}
                </div>
            {% endif %}

        {% endfor %}

    </div>

{% endif %}

{# Output 'incoming' relations #}
{% if context.content.relation is not empty or context.contenttype.relations is defined %}

    {% for reltype, ids in context.content.relation %}
        {% if context.contenttype.relations[reltype] is not defined %}
            <p>{{ __('This record is related to:') }}</p>
            <table class="table table-striped dashboardlisting">
                {% for id in ids %}
                    {% setcontent record = reltype~'/'~id %}
                    {% if record %}
                        {% set editable = isallowed('edit', record) %}
                        {% include ['_sub/_listing.twig'] with {'excerptlength': 280, 'thumbsize': 54, 'compact': true, 'content': record} %}
                    {% endif %}
                {% endfor %}
            </table>
        {% endif %}
    {% endfor %}

{% endif %}

{% if context.content.relation is not empty or context.contenttype.relations is defined %}
        <hr>
    </div>
{% endif %}
